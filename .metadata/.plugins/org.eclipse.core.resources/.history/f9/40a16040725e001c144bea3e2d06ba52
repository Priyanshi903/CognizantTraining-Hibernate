package com.cognizant.ormlearn;

import java.util.List;
import java.util.Scanner;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;

import com.cognizant.ormlearn.model.Country;
import com.cognizant.ormlearn.model.Employee;
import com.cognizant.ormlearn.model.Stock;
import com.cognizant.ormlearn.service.CountryService;
import com.cognizant.ormlearn.service.EmployeeService;
import com.cognizant.ormlearn.service.StockService;
import com.cognizant.ormlearn.service.exception.CountryNotFoundException;

@SpringBootApplication
public class OrmLearnApplication {
	private static final Logger LOGGER=LoggerFactory.getLogger(OrmLearnApplication.class);
	
	private static CountryService countryService;
	private static StockService stockService;
	private static EmployeeService employeeService;
	
	private static void testGetAllCountries() {
		LOGGER.info("Start");
		List<Country> countries=countryService.getAllCountries();
		LOGGER.debug("countries={}",countries);
		countries.stream().forEach(System.out::println);
		LOGGER.info("End");
	}
	
	private static void testGetCountry() throws CountryNotFoundException {
		LOGGER.info("Start");
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter country code to be Searched");
		String countryCode=sc.nextLine();
		Country country=countryService.findCountryByCode(countryCode);
		System.out.println(country);
		LOGGER.info("End");
	}
	
	private static void testAddCountry() throws CountryNotFoundException {
		LOGGER.info("Start");
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter country code");
		String countryCode=sc.nextLine();
		System.out.println("Enter country name");
		String countryName=sc.nextLine();
		countryService.addCountry(new Country(countryCode,countryName));
		Country country=countryService.findCountryByCode(countryCode);
		System.out.println(country+".....Added ");
		LOGGER.info("End");
	}
	
	private static void testUpdateCountry() throws CountryNotFoundException {
		LOGGER.info("Start");
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter country code");
		String code=sc.nextLine();
		System.out.println("Enter country name");
		String name=sc.nextLine();
		countryService.updateCountry(code, name);
		Country country=countryService.findCountryByCode(code);
		System.out.println(country+".....Updated ");
		LOGGER.info("End");
	}
	
	private static void testDeleteCountry() throws CountryNotFoundException {
		LOGGER.info("Start");
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter country code of country to be deleted");
		String code=sc.nextLine();
		countryService.deleteCountry(code);
		Country country=countryService.findCountryByCode(code);
		LOGGER.info("End");
	}
	
	private static void testGetPartialName() {
		LOGGER.info("Start");
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter country name ");
		String name=sc.nextLine();
		countryService.partialCountryName(name);
		LOGGER.info("End");
	}
	
	private static void testGetByNameContaining() {
		LOGGER.info("Start");
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter country keyword");
		String search=sc.nextLine();
		List<Country> countries=countryService.startWithname(search);
		countries.stream().forEach(System.out::println);
		LOGGER.info("End");
	}
	
	private static void testGetStockGreaterThan() {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter price");
		double price=sc.nextDouble();
		List<Stock> stocks=stockService.getStockGreaterThan(price);
		stocks.stream().forEach(System.out::println);
	}
	
	private static void testGetHighest3Volume() {
		List<Stock> stocks=stockService.getHighest3Volume();
		stocks.stream().forEach(System.out::println);
	}
	
	private static void testGetLowestNVolumeOf() {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter code");
		String code=sc.nextLine();
		List<Stock> stocks=stockService.getLowestNVolumeOf(code);
		stocks.stream().forEach(System.out::println);
	}
	
	private static void testGetStockOfMonthYear() {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter month in number");
		int month=sc.nextInt();
		System.out.println("Enter year in number");
		int year=sc.nextInt();
		sc.nextLine();
		System.out.println("Enter code");
		String code=sc.nextLine();
		List<Stock> stocks=stockService.getStockOfMonthYear(month,year, code);
		stocks.stream().forEach(System.out::println);
	}
	
	private static void testGetEmployee() {
		LOGGER.info("Start");
		Employee employee = employeeService.get(1);
		LOGGER.debug("Employee:{}", employee);
		LOGGER.debug("Department:{}", employee.getDepartment());
		LOGGER.info("End");
		}



	public static void main(String[] args) {
		ApplicationContext ctx=SpringApplication.run(OrmLearnApplication.class, args);
		countryService=ctx.getBean(CountryService.class);
		stockService=ctx.getBean(StockService.class);
//		testGetAllCountries();
//		LOGGER.info("Inside Main");
//		
//		try {
//			testGetCountry();
//			testAddCountry();
//			testUpdateCountry();
//			testDeleteCountry();
//		} catch (CountryNotFoundException e) {
//			
//			System.out.println(e.getMessage());
//		}
//		testGetPartialName();
		
//		testGetByNameContaining();
		
		
		//////FOR STOCK-------------->
//		testGetStockGreaterThan();
		testGetHighest3Volume();
//		testGetLowestNVolumeOf();
//		testGetStockOfMonthYear();
	}

}
