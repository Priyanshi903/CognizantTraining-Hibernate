package com.cognizant.ormlearn.service;

import java.util.*;
import java.util.stream.Collectors;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cognizant.ormlearn.model.Country;
import com.cognizant.ormlearn.repository.CountryRepository;
import com.cognizant.ormlearn.service.exception.CountryNotFoundException;

@Service
public class CountryService {

	@Autowired
	CountryRepository countryRepository;

	@Transactional
	public List<Country> getAllCountries() {
		return countryRepository.findAll();
	}

	@Transactional
	public Country findCountryByCode(String countryCode) throws CountryNotFoundException {
		Optional<Country> result = countryRepository.findById(countryCode);
		if (!result.isPresent()) {
			throw new CountryNotFoundException("Country Not Found");
		}
		Country country = result.get();
		return country;

	}

	@Transactional
	public void addCountry(Country country) {
		countryRepository.save(country);
	}

//	@Transactional
	public void updateCountry(String code, String name) {
		Optional<Country> result = countryRepository.findById(code);
		Country country = result.get();
		country.setName(name);
		countryRepository.save(country);
	}

	@Transactional
	public void deleteCountry(String code) {
		countryRepository.deleteById(code);
	}

	@Transactional
	public void partialCountryName(String  name) {
		String new_name=name.toUpperCase();
		List<Country> countries = getAllCountries();
		countries.stream().filter(c->c.getName().toUpperCase().startsWith(new_name)).collect(Collectors.toList()).forEach(System.out::println);
	}

}
